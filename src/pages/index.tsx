import Head from 'next/head'
import Image from 'next/image'
import { useCallback, useState } from 'react'
import {
	ComposableMap,
	Geographies,
	Geography,
	Marker,
	ZoomableGroup,
} from 'react-simple-maps'

const geoUrl =
	// 'https://code.highcharts.com/mapdata/countries/in/custom/in-all-andaman-and-nicobar.topo.json'
	// 'https://code.highcharts.com/mapdata/countries/in/custom/in-all-disputed.topo.json'
	// 'https://code.highcharts.com/mapdata/countries/in/custom/in-all-daman-and-diu.topo.json'
	'india_district.geojson'

const geoUrl2 =
	'https://code.highcharts.com/mapdata/countries/in/custom/in-all-andaman-and-nicobar.topo.json'

const geoUrl3 =
	'https://raw.githubusercontent.com/covid19india/covid19india-react/master/public/maps/chhattisgarh.json'

const geoUrl4 = 'india_state_geo.json'

const geoUrl5 =
	'https://raw.githubusercontent.com/datameet/maps/master/Country/india-osm.geojson'

const geoUrl6 = 'india_taluk.geojson'

const geoUrl7 =
	'https://raw.githubusercontent.com/covid19india/covid19india-react/master/public/maps/india.json'

export default function Home() {
	const [selected, setSelected] = useState<any>({
		state: 'N/A',
		district: 'N/A',
	})
	return (
		<>
			<Head>
				<title>Geo JSON</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<h1>
				Selected {selected.district} {selected.state}
			</h1>
			<ComposableMap projection="geoMercator">
				<ZoomableGroup
					center={[73.7333, 19.990949]}
					zoom={9}
					maxZoom={100}
				>
					<Geographies geography={geoUrl7}>
						{({ geographies }) =>
							geographies.map((geo) => (
								<Geography
									key={geo.rsmKey}
									geography={geo}
									fill="#45aaf2"
									stroke="#2c3e50"
									strokeWidth={0.01}
									onMouseEnter={() => {
										const { NAME_2 } = geo.properties
										setSelected({
											state: NAME_2,
										})
									}}
									style={{
										default: {
											fill: '#ECEFF1',
											outline: 'none',
										},
										hover: {
											fill: '#fff',
											outline: 'none',
										},
									}}
								/>
							))
						}
					</Geographies>
					{/* create transparent marker with circle */}

					<Marker coordinates={[73.733441, 19.9909493]}>
						<circle
							r={1}
							fill={
								// rgb(255, 0, 0)
								'rgba(0, 255, 100, 0.5)'
							}
							stroke="rgba(0, 255, 100)"
							strokeWidth={0.1}
						/>
					</Marker>
				</ZoomableGroup>
			</ComposableMap>
		</>
	)
}
